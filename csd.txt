function [U, V, Z, C, S] = CSD (Q1, Q2)

   [m, n]  = size(Q1);
   [p, x_] = size(Q2);

   [U, S, Zt] = svd(Q2);
   Ut = U';
   Z = Zt';

   q1 = min(m, n);
   q2 = min(p, n);

   Sx = [];

   for k = 1:q2
       Sx = [Sx, S(:, k)];
   end

   Sx = [zeros(q2, n - q2), Sx];

   %
   % display S
   %
   S = Sx

   flip = fliplr(eye(size(S)));
   S = flip * S * flip

   S

   k = 0;

   Sdiag = diag(S)'
   for i = 1:size(Sdiag)
       Sdiag(i)
       if( Sdiag(i) < (1/sqrt(2)) )
           k = i
           break
       end
   end

   [Vt, R] = qr( Q1 * Z )
   V = Vt';

   n;
   q1;
   q2;
   k;

   index = n - q2 + k + 1
   t = q2 + q1 - n - k

   i = 0;
   R_33 = [];
   while i < t
       R_33 = [R_33, R(:,index + i)];
       i = i + 1;
   end

   [Ur, Cr, Ztr] = svd(R_33);
   S = [zeros(n - q2), S]
   n - q2 + k;
   n - q2 + k;
   n - q1;
   C = Cr % [R(n - q2 + k:n - q2 + k), Cr, zeros(n - q1)]

   U(:, q1 + 1 - t:q1) = U(:, q1 + 1 - t:q1) * Ztr'
   Z(:,n + 1 - t:n) = Z(:,n + 1 - t:n) * Ztr'

   i = 0;
   Sbar = [];
   while i < t
       Sbar = [Sbar, R(:,i + 1)]
       i = i + 1;
   end

   W = Sbar * Ztr'

   [Vw, R] = qr(W)
   q2 + 1 - t
   q2 + 1 - t
   q2
   Vw
   V(:,q2 + 1 - t:q2)
   V(:,q2 + 1 - t:q2) = V(:,q2 + 1 - t:q2) * Vw
end
